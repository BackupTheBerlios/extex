<project name="ExTeX" default="help" basedir=".">

    <description>ExTeX - build file</description>

    <target name="help" description="Displays usage information">
        <echo>Usage: ant &lt;target&gt;
          The following targets are supported:
          compile
              Compile all file except the tests.	
          jar
              Create the jar file.
          javadoc
              Create the javadoc documentation in target/javadoc. 
          checkstyle
          tests
              Perfom all tests.
          deploy
          clean
        </echo>
    </target>

    <!-- configure the directories -->
    <property name="extexjarfile" value="extex"/>
    <property name="testsuitejarfile" value="testsuite"/>
    <property name="src" location="src/java"/>
    <property name="src.tests" location="src/test"/>
    <property name="classes" location="target/classes"/>
    <property name="javadoc" location="target/javadoc"/>
    <property name="javadocxml" location="doc/javadocxml"/>
    <property name="dbdoclet" location="doc/javadocdb"/>
    <property name="tmp" location="tmp"/>
    <property name="tmp.tests" location="tmp/tests"/>
    <property name="deploy" location="deploy"/>
    <property name="deploy.lib" location="deploy/lib"/>
    <!-- classpath for the application -->
    <path id="main.class.path">
        <fileset dir="lib">
            <include name="*.jar"/>
            <exclude name="junit.jar"/>
            <exclude name="ant.jar"/>
        </fileset>
    </path>
    <path id="test.class.path">
        <fileset dir="lib">
            <include name="*.jar"/>
            <exclude name="ant.jar"/>
        </fileset>
        <fileset dir="lib.develop">
            <include name="*.jar"/>
            <exclude name="ant.jar"/>
        </fileset>
    </path>

    <taskdef resource="checkstyletask.properties"
             classpath="lib.develop/checkstyle-all-3.4.jar"/>

    <target name="compile"
            description="Compile the Java files (without tests)">
        <!-- create empty output directory for classes if not present -->
        <mkdir dir="${classes}"/>
        <!-- compile the application code -->
        <javac srcdir="${src}" 
               destdir="${classes}"
               debug="on">
            <classpath refid="main.class.path"/>
        </javac>
        <copy todir="${classes}">
            <fileset dir="src/java">
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
                <include name="**/ExTeX-PL"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.tests"
            description="Compile the Java files (with tests)">
        <!-- create empty output directory for classes if not present -->
        <mkdir dir="${classes}"/>
        <!-- compile the application code -->
        <javac srcdir="${src.tests}" 
               destdir="${classes}"
               debug="on">
            <classpath refid="main.class.path"/>
            <classpath refid="main.class.path"/>
        </javac>
        <copy todir="${classes}">
            <fileset dir="src">
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
                <include name="**/ExTeX-PL"/>
            </fileset>
        </copy>
    </target>

    <!-- make a jar from the classes not matching magic testcase identifiers-->
    <target name="jar"
            depends="compile"
            description="Create extex jar file">
        <mkdir dir="${deploy.lib}"/>
        <jar jarfile="${deploy.lib}/${extexjarfile}.jar">
            <fileset dir="${classes}">
                <patternset>
                    <exclude name="**/*Test.class"/>
                    <exclude name="**/AllTests.class"/>
                </patternset>
            </fileset>
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Main-Class" value="de.dante.extex.ExTeX"/>
            </manifest>
        </jar>
    </target>

    <!-- make a jar from the classes matching magic testcase identifiers-->
    <target name="jar.tests"
            depends="compile.tests"
            description="Create testsuite jar file">
        <mkdir dir="${deploy.lib}"/>
        <jar jarfile="${deploy.lib}/${testsuitejarfile}.jar">
            <fileset dir="${classes}">
                <patternset>
                    <include name="**/*Test.class"/>
                    <include name="**/AllTests.class"/>
                </patternset>
            </fileset>
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <!-- attribute name="Main-Class" value="de.dante.extex.ExTeX"/ -->
            </manifest>
        </jar>
    </target>

    <target name="tests" depends="jar,jar.tests"
            description="Run JUnit tests">
        <!-- create output directories for test reports -->
        <delete dir="${tmp.tests}"/>
        <mkdir dir="${tmp.tests}"/>
        <!-- Performing tests:                                         -->
        <!-- Run all classes "*Test.java" in the folder "${src.tests}" -->
        <junit printsummary="yes" haltonfailure="yes">
            <classpath>
                <pathelement path="${classes}"/>
            </classpath>
            <formatter type="plain"/>
            <batchtest fork="yes" todir="${tmp.tests}">
                <fileset dir="${src.tests}">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="checkstyle"
            description="Generates a report of violations of the coding conventions.">
        <checkstyle config=".checkstyle.cfg"
                    failureProperty="checkstyle.failure"
                    failOnViolation="false">
            <formatter type="plain" tofile="${tmp}/checkstyle.txt"/>
            <fileset dir="src" includes="**/*.java"/>
        </checkstyle>
    </target>

    <target name="dist"
            depends="deploy"
            description="This is just an alias for old make freaks;-)" />

    <target name="deploy"
            depends="jar"
            description="Create jar file with the compiled classes">
        <copy todir="${deploy.lib}">
            <fileset dir="lib">
                <include name="**/*.jar"/>
                <exclude name="**/ant.jar"/>
                <exclude name="**/junit.jar"/>
                <exclude name="**/shiftone-jrat.jar"/>
            </fileset>
        </copy>
        <tstamp/>
        <tar tarfile="${tmp}/ExTeX-${DSTAMP}.tar" basedir="${deploy}">
            <tarfileset dir=".">
            </tarfileset>
        </tar>
        <gzip zipfile="${tmp}/ExTeX-${DSTAMP}.tgz" 
          src="${tmp}/ExTeX-${DSTAMP}.tar" />
        <delete file="${tmp}/ExTeX-${DSTAMP}.tar" />
    </target>

    <target name="clean"
            description="Remove unneccesary files and directories.">
        <delete dir="${classes}"/>
        <delete dir="${deploy}"/>
        <delete dir="${tmp.tests}"/>
        <delete dir="${javadoc}"/>
        <delete>
        <fileset dir="testdata">   
            <include name="*.log*" />  
            <include name="*.out" />  
        </fileset>
        </delete>
        </target>

    <target name="javadoc"
            description="Create JavaDoc HTML pages.">
        <mkdir dir="${javadoc}" />
        <javadoc 
             destdir="${javadoc}"
             overview="${src}/overview.html"
             stylesheetfile="src/javadoc/stylesheet.css"
        	 excludepackagenames="de.dante.tools.doclet,de.dante.tools.plugin,de.dante.tools.xml"
             author="true"
             version="true"
             use="true"
             splitindex="true"
             notree="false"
             nonavbar="false"
             noindex="false"
             nodeprecatedlist="false"
             nodeprecated="false">
            <classpath refid="main.class.path"/>
            <packageset dir="${src}" defaultexcludes="yes"/>
        </javadoc>
        <copy todir="${javadoc}">
            <fileset dir="${src}">
                <include name="**/*.gif"/>
                <include name="**/*.png"/>
            </fileset>
        </copy>
    </target>

    <target name="javadocxml"
            description="Create javadoc XML pages">
        <mkdir dir="${javadocxml}" />
        <property name="doc.params" value="-outdir ${javadocxml}"/>
        <javadoc 
                doclet="de.dante.tools.doclet.XMLDoclet1"
                additionalparam="${doc.params}">
            <classpath refid="main.class.path"/>
            <classpath refid="test.class.path"/>
            <packageset dir="${src}" defaultexcludes="yes"/>
        </javadoc>
        <copy todir="${javadocxml}">
            <fileset dir="src">
                <include name="**/*.gif"/>
                <include name="**/*.png"/>
            </fileset>
        </copy>
    </target>

    <target name="dbdoclet"
            description="Create dbjavadoc">
        <mkdir dir="${dbdoclet}" />
        <copy todir="${dbdoclet}">
            <fileset dir="src">
                <include name="**/*.gif"/>
                <include name="**/*.png"/>
            </fileset>
        </copy>
        <copy todir="${dbdoclet}">
            <fileset dir="doc">
                <include name="docbook/**/*"/>
                <include name="fo.xsl"/>
            </fileset>
        </copy>
        <property name="doc.params" value="-properties doc/dbdoclet-extex.properties"/>
        <javadoc 
            maxmemory="256m"
            destdir="${dbdoclet}"
            author="true"
            version="true"
            splitindex="true"
            notree="false"
            nonavbar="false"
            noindex="false"
            nodeprecatedlist="false"
            nodeprecated="false"
            doclet="org.dbdoclet.doclet.docbook.DocBookDoclet"
            additionalparam="${doc.params}">
            <classpath refid="main.class.path"/>
            <classpath refid="test.class.path"/>
            <packageset dir="${src}" defaultexcludes="yes"/>
        </javadoc>
    </target>

    <target name="gcview"
            description="Show the logfile from the GC in the gcviewer">
        <java fork="true" jar="lib.develop/gcviewer.jar">
            <arg value="gc.log"/>
        </java>
    </target>

    <target name="tar"
            description="create a tar file with all source files, ...">
        <tar destfile="${tmp}/extex.tar.bz2" compression="bzip2" basedir="./" >
            <include name="doc/**/*"/>
            <exclude name="doc/javadocdb/**/*"/>
            <exclude name="doc/javadocxml/**/*"/>
            <exclude name="doc/javadoc/**/*"/>
            <include name="lib/**/*"/>
            <include name="lib.develop/**/*"/>
            <include name="src/**/*"/>
            <include name="font/**/*"/>
            <include name="test/**/*"/>
            <include name="testdata/**/*"/>
            <include name="util/**/*"/>
            <include name="www/**/*"/>
            <include name=".*"/>
            <include name="extex"/>
            <include name="build.xml"/>
            <include name="build"/>
            <include name="install-extex"/>
        </tar>
    </target>

    <!-- <target name="extex" description="Run ExTeX">
                <java fork="true" classname="de.dante.extex.ExTeX">
                        <jvmarg value="-Xms64m"/> 
                        <jvmarg value="-Xmx128m"/> 
                        <jvmarg value="-Xloggc:gc.log"/> 
                </java>
    </target> -->
        
    <target name="extex32"
            depends="compile"
            description="Create a extex32.xml config file">
        <java fork="true" classname="de.dante.tools.plugin.CreateConfig">
             <arg value="src/config/extex.xml"/>
             <arg value="src/config/extex-ext.xml"/>
             <arg value="src/config/extex32.xml"/>
        </java>
        <copy todir="target/classes/config">
            <fileset dir="src/config">
                <include name="*"/>
            </fileset>
        </copy>
        </target>

</project>
